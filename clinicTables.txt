CREATE DATABASE IF NOT EXISTS Clinic;
USE Clinic;


DROP TABLE IF EXISTS Patient;

CREATE TABLE Patient (
	patient_id  int NOT NULL AUTO_INCREMENT,
	first_name  varchar(30) NOT NULL,
	last_name   varchar(30) NOT NULL,
	middle_name varchar(30),
	DOB date NOT NULL,
	sex CHAR(1) NOT NULL, 
	gender  TINYINT,
	primary_phone   varchar(20) NOT NULL,
	secondary_phone varchar(20),
	email   varchar(40),
	address_id  int, 
	insurance_id    int,
	pharmacy_id int,
	labdest_id  int,
	minor   boolean,
	guardian    int,
	pcp_id  int, 
	prev_note_id    int NOT NULL,
	emergency_contact1  int NOT NULL,
	emergency_contact2  int,
	preferred varchar(30),
	
	PRIMARY KEY (patient_id)
);

DROP TABLE IF EXISTS Users;

CREATE TABLE Users (
	user_id int NOT NULL AUTO_INCREMENT,
	user_name   varchar(50) NOT NULL,
	permission  TINYINT NOT NULL,
	job_title   varchar(50),
	phone   varchar(20),
	email   varchar(40),
	first_name  varchar(40),
	last_name   varchar(40),
	pwd varchar(40),

	PRIMARY KEY (user_id)
);

DROP TABLE IF EXISTS Addresses;

CREATE TABLE Addresses (
	address_id  int NOT NULL AUTO_INCREMENT,
	street  varchar(40) NOT NULL,
	city    varchar(30) NOT NULL,
	state_abbr  char(2) NOT NULL,
	zip char(5) NOT NULL,
	
	PRIMARY KEY (address_id)
);

DROP TABLE IF EXISTS ProblemList;

CREATE TABLE ProblemList (
	problem_id  int NOT NULL AUTO_INCREMENT,
	patient_id  int NOT NULL, 
	problem varchar(30) NOT NULL,
	category    varchar(30),
	timeframe   varchar(12),
	PRIMARY KEY (problem_id)
);

CREATE INDEX patient_id_idx ON ProblemList (patient_id);

DROP TABLE IF EXISTS MedicationList;

CREATE TABLE MedicationList (
	medlist_id  int NOT NULL AUTO_INCREMENT,
	patient_id  int NOT NULL,
	medication_id   int NOT NULL,
	dosage  varchar(50),
	status  boolean NOT NULL,
	PRIMARY KEY (medlist_id)
);

CREATE INDEX patient_id_idx ON MedicationList (patient_id);

DROP TABLE IF EXISTS Note;

CREATE TABLE Note (
	note_id int NOT NULL AUTO_INCREMENT,
	patient_id  int NOT NULL,
	appointment_id  int,
	cc  varchar(1000),
	hist_illness    TEXT,
	ros_id  int,
	med_profile_id  int,
	social_hist TEXT,
	med_hist    TEXT,
	psych_hist  TEXT,
	assessment  TEXT,
	plan    TEXT,
	laborder_id int,
	labdest_id  int, 
	demographics TEXT,
	comments    TEXT,
	substance_hist TEXT,
	PRIMARY KEY (note_id)
);

DROP TABLE IF EXISTS FamilyHistory;

CREATE TABLE FamilyHistory (
	patient_id  int NOT NULL,
    relationship    varchar(30) NOT NULL,
    condit   varchar(6000),
    INDEX(patient_id)
);

DROP TABLE IF EXISTS EmergencyContact;

CREATE TABLE EmergencyContact (
	contact_id  int NOT NULL AUTO_INCREMENT,
	contact_name    varchar(50) NOT NULL,
	relationship    varchar(30) NOT NULL,
	phone   varchar(20) NOT NULL,
	PRIMARY KEY (contact_id)
);

DROP TABLE IF EXISTS MedicalProfile;

CREATE TABLE MedicalProfile (
	med_profile_id  int NOT NULL AUTO_INCREMENT,
	bmi float,
	p_weight    float,
	weight_meas char(3),
	height  varchar(5),
	blood_pressure  varchar(10),
	pulse   int,
	pulse_ox    int,
	appointment_id  int NOT NULL,
	PRIMARY KEY (med_profile_id)
);

DROP TABLE IF EXISTS ReviewOfSystem;

CREATE TABLE ReviewOfSystem (
	ros_id  int NOT NULL AUTO_INCREMENT,
	appointment_id int NOT NULL,
	comments    TEXT,
	rashes      boolean,
	itching     boolean,
	hair_nails      boolean,
	headaches       boolean,
	head_injury     boolean,
	glasses     boolean,
	change_vision      boolean,
	eye_pain    boolean,
	double_vision       boolean,
	flash_lgt       boolean,
	glaucoma    boolean,
	last_eye    date,
	hearing     boolean,
	ear_pain    boolean,
	ear_disch   boolean,
	ringing     boolean,
	dizziness   boolean,
	nose_bld    boolean,
	stuffiness  boolean,
	freq_colds  boolean,
	hives   boolean,
	swell_lip   boolean,
	hay_fever   boolean,
	asthma  boolean,
	eczema  boolean,
	sens_drg_food   boolean,
	bld_gums    boolean,
	sore_tongue boolean,
	sore_throat boolean,
	hoarseness  boolean,
	lumps   boolean,
	swoll_glands    boolean,
	goiter  boolean,
	neck_stiffness  boolean,
	breast_lumps    boolean,
	breast_pain boolean,
	nipple_discharge    boolean,
	bse boolean,
	short_of_brth   boolean,
	cough   boolean,
	phlem   boolean,
	wheezing    boolean,
	chough_bld  boolean,
	chest_pain  boolean,
	fever   boolean,
	night_sweats    boolean,
	swell_hands boolean,
	blue_toes   boolean,
	high_blood  boolean,
	skipping_heart  boolean,
	heart_murmur    boolean,
	hx_of_heart_med boolean,
	bronchitis  boolean,
	rheumatic_heart_dis boolean,
	appetite1    boolean,
	swallowing  boolean,
	nausea  boolean,
	heartburn   boolean,
	vomiting    boolean,
	vomit_blood boolean,
	constipation    boolean,
	diarrhea    boolean,
	bowels  boolean,
	abdominal_pain  boolean,
	burping boolean,
	farting boolean,
	yellow_skin boolean,
	food_intol  boolean,
	rectal_bleed    boolean,
	unination   boolean,
	urin_pain   boolean,
	freq_urin   boolean,
	urgent_urin boolean,
	incontinence_urin   boolean,
	dribble boolean,
	urin_stream boolean,
	urin_blood  boolean,
	uti_stones  boolean,
	leg_cramp   boolean,
	varicose_vein   boolean,
	clot_vein   boolean,
	musc_pain   boolean,
	musc_swelling   boolean,
	musc_stiffness  boolean,
	joint_motion    boolean,
	broken_bone boolean,
	sprains boolean,
	arthritis   boolean,
	gout    boolean, 
	seizures    boolean,
	fainting    boolean,
	paralysis   boolean,
	weakness    boolean,
	muscle_size boolean,
	muscle_spasm    boolean,
	tremor  boolean,
	invol_move  boolean,
	incoordination  boolean,
	numbness    boolean,
	pins_needles    boolean,
	anemia  boolean,
	bruising_bleed  boolean,
	transfusions    boolean,
	growth  boolean,
	appetite    boolean,
	thirst  boolean,
	incre_urin  boolean,
	thyroid boolean,
	head_cold   boolean,
	sweating    boolean,
	diabetes    boolean,
	anxiety boolean,
	depression  boolean,
	memory  boolean,
	unusual_prob    boolean,
	sleep   boolean,
	psychiatrist    boolean,
	mood    boolean,
	PRIMARY KEY (ros_id)
);

DROP TABLE IF EXISTS Appointment;

CREATE TABLE Appointment (
	appointment_id  int NOT NULL AUTO_INCREMENT,
	patient_id  int NOT NULL,
	date_time   datetime NOT NULL,
	duration    int NOT NULL,
	status  TINYINT NOT NULL,
	doctor_id   int NOT NULL,
	doctor_last_name    varchar(30) NOT NULL, 
	doctor_first_name   varchar(30) NOT NULL,
	PRIMARY KEY (appointment_id)
);

DROP TABLE IF EXISTS Billing;

CREATE TABLE Billing (
	billing_id  int NOT NULL AUTO_INCREMENT,
	patient_id  int NOT NULL,
	appointment_id  int NOT NULL,
	note_id int NOT NULL,
	bill_statement  TEXT NOT NULL,
	amount_due  float,
	paid    boolean NOT NULL,
	PRIMARY KEY (billing_id)
);

DROP TABLE IF EXISTS Pharmacy;

CREATE TABLE Pharmacy (
	pharmacy_id int NOT NULL AUTO_INCREMENT,
	pharmacy_name   varchar(50),
	address_id  int,
	phone   varchar(20),
	email   varchar(50),
	PRIMARY KEY (pharmacy_id)
);

DROP TABLE IF EXISTS Prescriptions;

CREATE TABLE Prescriptions (
	prescription_id int NOT NULL AUTO_INCREMENT,
	patient_id  int NOT NULL,
    doctor_id   int NOT NULL,	
    pharmacy_id int NOT NULL,
    medication_id   int NOT NULL,
    dosage  varchar(50) NOT NULL,
    route   varchar(20) NOT NULL,
	usage_details   varchar(40) NOT NULL,
	quantity    int NOT NULL,
	refills int NOT NULL,
	general_notes   varchar(5000),
	orderdate 	DATE,
    status  int NOT NULL, 
	PRIMARY KEY (prescription_id)
);

DROP TABLE IF EXISTS LabDest;

CREATE TABLE LabDest (
	labdest_id  int NOT NULL AUTO_INCREMENT,
	labdest_name    varchar(50),
	address_id  int,
	phone   varchar(20),
	email 	varchar(50),
	PRIMARY KEY (labdest_id)
);

DROP TABLE IF EXISTS LabOrders;

CREATE TABLE LabOrders (
	laborder_id int NOT NULL AUTO_INCREMENT,
	patient_id  int NOT NULL,
	doctor_id   int NOT NULL,
	status  TINYINT NOT NULL,
	labdest_id  int NOT NULL,
	cc_recipients   varchar(70), 
    diagnosis   varchar(70),
	orderdate 	DATE,
	PRIMARY KEY (laborder_id)
);

DROP TABLE IF EXISTS LabList;

CREATE TABLE LabList (
	lab_id  int NOT NULL,
	lab_name    varchar(50) NOT NULL,
	PRIMARY KEY (lab_id)
);

DROP TABLE IF EXISTS OrderedLabs;

CREATE TABLE OrderedLabs (
	laborder_id int NOT NULL,
	lab_id  int NOT NULL,
	results varchar(5000),
	urgent boolean
);

DROP TABLE IF EXISTS DrugList;

CREATE TABLE DrugList (
	medication_id   int NOT NULL AUTO_INCREMENT,
	medication_name varchar(50) NOT NULL,
	generic_name    varchar(50) NOT NULL,
	PRIMARY KEY (medication_id)
);

DROP TABLE IF EXISTS Insurance;

CREATE TABLE Insurance (
	insurance_id int NOT NULL AUTO_INCREMENT,
	PRIMARY KEY (insurance_id)
);
